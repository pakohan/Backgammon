gettargetwhileeatenwhite=getTargetWhileEatenWhite
playertest.player.s=PlayerTest{player\=%s}
s.is.the.winner=%s is the winner\!
x.d.y.d.t.start.d.target.d.result.d.current.player.s.s.method.s=x \= %d, y \= %d\\t start \= %d, target \= %d, result \= %d; Current player\: %s; %s; Method\: %s
upfaz.backgammon=Upfaz  backgammon
gettargetwhileeatenblack=getTargetWhileEatenBlack
getstartnumber=getStartNumber
you.can.t.move.this.piece.or.there.is.no.pieces=You can't move this piece or there is no pieces
gettargetresult.s.n=getTargetResult\: %s%n
can.t.jump.this.field.color.problem=Can't jump this Field (Color problem)
getendnumber=getEndNumber
no.possible.moves.available=No possible moves available
bad.luck=Bad luck
congratulations=Congratulations\!
backgammonframe.currentgame.s.statuspanel.s.status.s.result.d=BackgammonFrame{currentGame\=%s, statusPanel\=%s, status\='%s', result\=%d}
res.background.png=res/background.png
res.dice1.png=res/dice1.png
res.dice2.png=res/dice2.png
res.dice3.png=res/dice3.png
res.dice4.png=res/dice4.png
res.dice5.png=res/dice5.png
res.dice6.png=res/dice6.png
res.grau.png=res/grau.png
res.weiss.png=res/weiss.png
dices.paint.something.went.wrong=Dices.paint() - something went wrong
drawtest.dice1.s.dice2.s.dice3.s.dice4.s.dice5.s.dice6.s.stoneb.s.stonew.s.background.s.currentgame.s=DrawTest{dice1\=%s, dice2\=%s, dice3\=%s, dice4\=%s, dice5\=%s, dice6\=%s, stoneb\=%s, stonew\=%s, background\=%s, currentGame\=%s}
w=w
b=b
fieldtest.field.s=FieldTest{field\=%s}
let.the.game.begin=Let the game begin\!
begin=Begin
you.re.lucky.bastard=You're lucky bastard
so.youre.moves.are.d.d=So, youre moves are\: %d, %d
eatstone=eatStone
eating.the.stone=Eating the stone
movestone=moveStone
moving.the.stone=Moving the stone
takeoutstone=takeOutStone
taking.out.the.stone=Taking out the stone
dosomethingwithstones=doSomethingWithStones
you.re.going.in.the.wrong.direction=You're going in the wrong direction\!
renewjumps=renewJumps
setting.jumps.d.to.0=Setting jumps[%d] to 0
calcstoneinendphase=calcStoneInEndPhase
checkstartnumber=checkStartNumber
so.youre.moves.are.d.d.d.d=So, youre moves are\: %d, %d, %d, %d
jumps.d.d.d.d=Jumps\: %d, %d, %d, %d
checkendphasewhitetarget=checkEndphaseWhiteTarget
checkendphaseblacktarget=checkEndphaseBlackTarget
checkstartvalidnessloop=checkStartValidnessLoop
checkstartvalidness=checkStartValidness
checkstartvalidness.s.n=checkStartValidness\: %s%n
end.phase=End Phase\!
game.gamemap.s.player1.s.player2.s.winner.d.endphase.s.jumps.s.jumpst.s.startnumber.d.targetnumber.d.status.s.currentmehtodname.s.currentplayer.s=Game{gameMap\=%s, player1\=%s, player2\=%s, winner\=%d, endPhase\=%s, jumps\=%s, jumpsT\=%s, startNumber\=%d, targetNumber\=%d, status\='%s', currentMehtodName\='%s', currentPlayer\=%s}
playturn=playTurn
player.s.it.s.your.turn=Player %s, it's your Turn\!
player.s.is.the.winner=Player %s is the winner\!
getstartandtargetnumbers=getStartAndTargetNumbers
you.can.not.play.with.this.stone=You can not play with this stone\!
setting.startnumber.to.d.and.targetnumber.to.d=Setting startNumber to %d and targetNumber to %d
no.moves.available=No moves available
welcome.to.upfaz.backgammon=Welcome to upfaz backgammon.
choose.the.ui=Choose the UI\:
t1.tui=\\t1.Tui
t2.gui=\\t2.Gui
input.doesn.t.match.s.n=Input doesn't match\: %s%n
exception.s.n=Exception.%s%n
s.is.the.winner.n=%s is the winner\!%n
observable.subscribers.s=Observable{subscribers\=%s}
white=White
black=Black
s=\ %s
statuspanel.statuslabel.s=StatusPanel{statusLabel\=%s}
your.input.is=Your input is
011.010.009.008.007.006.out.005.004.003.002.001.000.s=||011-010-009-008-007-006|OUT|005-004-003-002-001-000||-s-|
s.s=%s|%s|
s.s.n=%s||%s|\n
012.013.014.015.016.017.out.018.019.020.021.022.023.w=||012-013-014-015-016-017|OUT|018-019-020-021-022-023||-w-|
choose.the.target.field=Choose the target field
exception.input.doesn.t.match=Exception. Input doesn't match\!
choose.the.stone=Choose the stone\:
input.doesn.t.match=Input doesn't match\!
tui.currentgame.s=Tui{currentGame\=%s}
player.s.is.the.winner1=Player %s is the winner\!
player.s.it.s.your.turn1=Player %s, it's your Turn\!
player.s.is.the.winner2=Player %s is the winner\!
you.can.not.play.with.this.stone1=You can not play with this stone\!
choose.the.target.field1=Choose the target field\:
s1=%s-
choose.the.target.field2=Choose the target field\:
